from reportlab.lib.pagesizes import letter
from reportlab.pdfgen import canvas
import os

def generate_pdf_report(name, prediction, shap_img="reports/shap_summary.png"):
    """Generate PDF report for borrower risk assessment"""
    try:
        # Create reports directory if it doesn't exist
        os.makedirs("reports/borrower_reports", exist_ok=True)
        
        file_path = f"reports/borrower_reports/{name}_report.pdf"
        c = canvas.Canvas(file_path, pagesize=letter)
        
        # Set font and size
        c.setFont("Helvetica-Bold", 16)
        c.drawString(100, 750, f"Credit Risk Assessment Report")
        
        c.setFont("Helvetica", 12)
        c.drawString(100, 720, f"Borrower: {name}")
        c.drawString(100, 700, f"Risk Score: {prediction}")
        
        # Risk interpretation
        risk_score = float(prediction)
        if risk_score < 0.3:
            risk_level = "Low Risk"
            recommendation = "Approved"
        elif risk_score < 0.7:
            risk_level = "Medium Risk"
            recommendation = "Review Required"
        else:
            risk_level = "High Risk"
            recommendation = "Not Recommended"
        
        c.drawString(100, 680, f"Risk Level: {risk_level}")
        c.drawString(100, 660, f"Recommendation: {recommendation}")
        
        # Add SHAP image if available
        if os.path.exists(shap_img):
            try:
                c.drawImage(shap_img, 100, 300, width=400, height=300)
                c.drawString(100, 280, "Feature Importance Analysis (SHAP)")
            except:
                c.drawString(100, 280, "SHAP visualization not available")
        else:
            c.drawString(100, 280, "SHAP visualization not generated")
        
        # Add footer
        c.setFont("Helvetica", 10)
        c.drawString(100, 50, "Generated by Credit Risk Prediction System")
        
        c.save()
        return file_path
    except Exception as e:
        print(f"Error generating PDF report: {e}")
        return None
